input {
  file {
    path => [
        "/files/*.gz"
    ]
		mode => "read"
    start_position => "beginning"
		file_completed_action => "log_and_delete"
		file_completed_log_path => "/files/files-processed.log"
  }
}

filter {
  if ([message] =~ /^#/) {
      drop{}
  }

  grok {
      match => { "message" => "(?<date>[0-9\-]+)\t%{TIME:time}\t(?<x_edge_location>\b[\w\-]+\b)\t(?:%{NUMBER:sc_bytes:int}|-)\t%{IPORHOST:c_ip}\t%{WORD:cs_method}\t%{HOSTNAME:cs_host}\t%{NOTSPACE:cs_uri_stem}\t%{NUMBER:sc_status:int}\t(?:%{URI:referrer}|-)\t%{NOTSPACE:User_Agent}\t%{NOTSPACE:cs_uri_query}\t%{GREEDYDATA:cookies}\t%{WORD:x_edge_result_type}\t%{NOTSPACE:x_edge_request_id}\t%{HOSTNAME:x_host_header}\t%{URIPROTO:cs_protocol}\t%{INT:cs_bytes:int}\t%{NUMBER:time_taken}\t%{NOTSPACE:x_forwarded_for}\t%{NOTSPACE:ssl_protocol}\t%{NOTSPACE:ssl_cipher}\t%{WORD:x_edge_response_result_type}\t(?<cs_protocol_version>[\w\/.0-9]+)\t(?:%{WORD:fle_status}|-)\t(?:%{INT:fle_encrypted_fields:int}|-)\t%{INT:c_port:int}\t%{NUMBER:time_to_first_byte}\t%{WORD:x_edge_detailed_result_type}\t%{NOTSPACE:sc_content_type}\t(?:%{NUMBER:sc_content_len}|-)\t(?:%{INT:sc_range_start:int}|-)\t(?:%{INT:sc_range_end:int}|-)" }
  }

  mutate {
    add_field => [ "listener_timestamp", "%{date} %{time}" ]
  }

  date {
    match => [ "listener_timestamp", "yyyy-MM-dd HH:mm:ss" ]
    target => "@timestamp"
  }

  geoip {
    source => "c_ip"
  }

  useragent {
    source => "User_Agent"
    target => "useragent"
  }

  mutate {
        rename => ["path", "file" ]
  }

  mutate {
    remove_field => ["date", "time", "listener_timestamp", "message", "host", "User_Agent"]
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "cloudfront-logs-%{+YYYY.MM.dd}"
    template => "/usr/share/logstash/config/cloudfront.template.json"
    template_name => "cloudfront-logs"
    document_type => "logs"
  }
}